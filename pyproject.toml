[build-system]
build-backend = "setuptools.build_meta"
requires = [
    "setuptools>=61.2",
    "setuptools_scm",
]

[project]
authors = [{name = "Common Partial Wave Analysis", email = "compwa-admin@ep1.rub.de"}]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Scientific/Engineering",
    "Typing :: Typed",
]
dependencies = [
    "awkward >=1",
    "matplotlib",
    "numpy",
    "pandas",
    "uproot >=4",
]
description = "Python helper tools for the Pawian framework"
dynamic = ["version"]
keywords = [
    "HEP",
    "PWA",
    "amplitude analysis",
    "partial wave analysis",
    "particle physics",
    "particles",
    "physics",
]
license = {text = "GPLv3 or later"}
name = "pawian-tools"
requires-python = ">=3.7"

[project.optional-dependencies]
dev = [
    "pawian-tools[doc]",
    "pawian-tools[jupyter]",
    "pawian-tools[sty]",
    "pawian-tools[test]",
    "sphinx-autobuild",
    "tox >=1.9", # for skip_install, use_develop
]
doc = [
    "Sphinx >=3",
    "ipywidgets",
    "myst-nb",
    "sphinx-api-relink>=0.0.7",
    "sphinx-book-theme",
    "sphinx-codeautolink[ipython]",
    "sphinx-copybutton",
    "sphinx-thebe",
    "sphinx-togglebutton",
]
format = [
    "black",
]
jupyter = [
    "isort",
    "jupyterlab",
    "jupyterlab-code-formatter",
    "jupyterlab-git",
    "jupyterlab-lsp",
    "jupyterlab-myst",
    "jupyterlab-myst",
    "python-lsp-ruff",
    "python-lsp-server[rope]",
]
lint = [
    "pawian-tools[mypy]",
    "ruff",
]
"mypy" = [
    "mypy >=0.730",
    "sphinx-api-relink",
]
sty = [
    "pawian-tools[format]",
    "pawian-tools[lint]",
    "pawian-tools[test]", # for pytest type hints
    "pre-commit",
]
test = [
    "nbmake",
    "pytest",
    "pytest-cov",
    "pytest-profiling",
    "pytest-xdist",
]

[project.readme]
content-type = "text/markdown"
file = "README.md"

[project.urls]
Changelog = "https://github.com/redeboer/PawianTools/releases"
Documentation = "http://redeboer.github.io/PawianTools"
Source = "https://github.com/redeboer/PawianTools"
Tracker = "https://github.com/redeboer/PawianTools/issues"

[tool.setuptools]
include-package-data = false
package-dir = {"" = "src"}

[tool.setuptools.package-data]
pawian = ["samples/*"]

[tool.setuptools.packages.find]
namespaces = false
where = ["src"]

[tool.setuptools_scm]
write_to = "src/pawian/version.py"

[tool.black]
exclude = '''
/(
    .*\.egg-info
    | .*build
    | \.eggs
    | \.git
    | \.pytest_cache
    | \.tox
    | \.venv
    | \.vscode
    | dist
)/
'''
include = '\.pyi?$'
preview = true
target-version = [
    "py310",
    "py311",
    "py312",
    "py37",
    "py38",
    "py39",
]

[tool.coverage.report]
exclude_also = [
    "if TYPE_CHECKING:",
]

[tool.coverage.run]
branch = true
omit = ["version.py"]
source = ["src"]

[tool.mypy]
disallow_incomplete_defs = true
disallow_untyped_defs = true
exclude = "_build"
show_error_codes = true
warn_unused_configs = true

[[tool.mypy.overrides]]
check_untyped_defs = true
disallow_incomplete_defs = false
disallow_untyped_defs = false
module = ["tests.*"]

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = ["awkward.*"]

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = ["matplotlib.*"]

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = ["pandas.*"]

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = ["uproot.*"]

[tool.pyright]
exclude = [
    "**/.git",
    "**/.ipynb_checkpoints",
    "**/.mypy_cache",
    "**/.pytest_cache",
    "**/.tox",
    "**/__pycache__",
    "**/_build",
]
reportGeneralTypeIssues = false
reportMissingParameterType = false
reportMissingTypeArgument = false
reportMissingTypeStubs = false
reportUnknownArgumentType = false
reportUnknownLambdaType = false
reportUnknownMemberType = false
reportUnknownParameterType = false
reportUnknownVariableType = false
reportUnnecessaryComparison = true
reportUnnecessaryIsInstance = false
reportUnusedClass = true
reportUnusedFunction = true
reportUnusedImport = true
reportUnusedVariable = true
typeCheckingMode = "strict"

[tool.pytest.ini_options]
addopts = [
    "--color=yes",
    "--doctest-continue-on-failure",
    "--doctest-modules",
    "--durations=3",
    "--ignore=docs/conf.py",
    "-m not slow",
]
filterwarnings = [
    "error",
    "ignore:.*Consider switching from .* to .*:DeprecationWarning",
    "ignore:DataFrame.groupby with axis=1 is deprecated.*:FutureWarning",
    "ignore:Using the level keyword in DataFrame and Series aggregations is deprecated.*:FutureWarning",
    "ignore:datetime.datetime.utcfromtimestamp\\(\\) is deprecated and scheduled for removal in a future version.*:DeprecationWarning",
    "ignore:the imp module is deprecated in favour of importlib.*:DeprecationWarning",
]
markers = [
    "serial",
    "slow: marks tests as slow (select with '-m slow')",
]
norecursedirs = [
    ".ipynb_checkpoints",
    "_build",
]
testpaths = [
    "src",
    "tests",
]

[tool.ruff]
extend-include = ["*.ipynb"]
extend-select = [
    "A",
    "B",
    "BLE",
    "C4",
    "C90",
    "D",
    "EM",
    "ERA",
    "FA",
    "I",
    "ICN",
    "INP",
    "ISC",
    "N",
    "NPY",
    "PGH",
    "PIE",
    "PL",
    "Q",
    "RET",
    "RSE",
    "RUF",
    "S",
    "SIM",
    "T20",
    "TCH",
    "TID",
    "TRY",
    "UP",
    "YTT",
]
ignore = [
    "D101",
    "D102",
    "D103",
    "D105",
    "D107",
    "D203",
    "D213",
    "D407",
    "D416",
    "E501",
    "SIM108",
    "UP036",
]
show-fixes = true
src = [
    "src",
    "tests",
]
target-version = "py37"
task-tags = ["cspell"]

[tool.ruff.per-file-ignores]
"*.ipynb" = [
    "B018",
    "C90",
    "D",
    "E402",
    "E703",
    "N806",
    "N816",
    "PLR09",
    "PLR2004",
    "PLW0602",
    "PLW0603",
    "S101",
    "T20",
    "TCH00",
]
"docs/*" = [
    "E402",
    "INP001",
    "S101",
    "S113",
    "T201",
]
"docs/conf.py" = [
    "A001",
    "D100",
    "PLW2901",
]
"setup.py" = ["D100"]
"tests/*" = [
    "D",
    "INP001",
    "PGH001",
    "PLR0913",
    "PLR2004",
    "S101",
    "T20",
]

[tool.ruff.pydocstyle]
convention = "google"

[tool.tomlsort]
all = false
ignore_case = true
in_place = true
sort_first = [
    "build-system",
    "project",
    "tool.setuptools",
    "tool.setuptools_scm",
]
sort_table_keys = true
spaces_indent_inline_array = 4
trailing_comma_inline_array = true
